# Reference: backends/CMakeLists.txt Structure
#
# Shows how to add conditional Slang support per backend

# ============================================================================
# Original Structure (probably something like this)
# ============================================================================

# add_subdirectory(dxr)
# add_subdirectory(vulkan)
# add_subdirectory(embree)
# etc.

# ============================================================================
# New Structure with Slang Options
# ============================================================================

include(CMakeDependentOption)

# Create dependent options - only available if parent options enabled
cmake_dependent_option(ENABLE_DXR_SLANG 
    "Build DXR backend with Slang shader compilation" 
    OFF 
    "ENABLE_SLANG;ENABLE_DXR" 
    OFF
)

cmake_dependent_option(ENABLE_VULKAN_SLANG 
    "Build Vulkan backend with Slang shader compilation" 
    OFF 
    "ENABLE_SLANG;ENABLE_VULKAN" 
    OFF
)

# Add backends - they check internally if Slang is enabled
if(ENABLE_DXR OR ENABLE_DXR_SLANG)
    add_subdirectory(dxr)
endif()

if(ENABLE_VULKAN OR ENABLE_VULKAN_SLANG)
    add_subdirectory(vulkan)
endif()

# Other backends unchanged
if(ENABLE_EMBREE)
    add_subdirectory(embree)
endif()

# etc.

# ============================================================================
# Alternative: Simpler approach (if you want all or nothing)
# ============================================================================

# Just use ENABLE_SLANG globally:

# if(ENABLE_DXR)
#     add_subdirectory(dxr)
#     # Inside dxr/CMakeLists.txt, check ENABLE_SLANG
# endif()

# if(ENABLE_VULKAN)
#     add_subdirectory(vulkan)
#     # Inside vulkan/CMakeLists.txt, check ENABLE_SLANG
# endif()

# ============================================================================
# Example Backend CMakeLists.txt Pattern
# ============================================================================

# In backends/dxr/CMakeLists.txt:

# find_package(D3D12 REQUIRED)
# # ... other D3D12 setup ...
# 
# add_library(crt_dxr MODULE 
#     render_dxr.cpp
#     # ... other sources
# )
# 
# target_link_libraries(crt_dxr PRIVATE
#     util
#     display
#     d3d12.lib
# )
# 
# # Add Slang if enabled
# if(ENABLE_SLANG OR ENABLE_DXR_SLANG)
#     target_link_libraries(crt_dxr PRIVATE slang_compiler_util)
#     target_compile_definitions(crt_dxr PRIVATE USE_SLANG_COMPILER=1)
# endif()

# ============================================================================
# CMake Configuration Examples
# ============================================================================

# Build with Slang for DXR only:
# cmake -B build -DENABLE_SLANG=ON -DENABLE_DXR=ON -DENABLE_DXR_SLANG=ON

# Build with Slang for both DXR and Vulkan:
# cmake -B build -DENABLE_SLANG=ON -DENABLE_DXR=ON -DENABLE_DXR_SLANG=ON -DENABLE_VULKAN=ON -DENABLE_VULKAN_SLANG=ON

# Build without Slang (traditional):
# cmake -B build -DENABLE_DXR=ON -DENABLE_VULKAN=ON
